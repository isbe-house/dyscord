version: '3.4'

secrets:
    discord_client_token:
        file: ./discord_client_token
    discord_application_id:
        file: ./discord_application_id
    discord_client_secret:
        file: ./discord_client_secret

services:
    dyscord:
        build:
            context: .
            dockerfile: Dockerfiles/demo.Dockerfile
        restart: "unless-stopped"
        container_name: "SimpleDiscord"
        volumes:
            - ./src/:/usr/src/app/src
            - ./demo/:/usr/src/app/demo
        command: python -u demo/run_bot.py
        user: "${UID}:${GID}"
        secrets:
            - discord_client_token
            - discord_application_id
            - discord_client_secret
        environment:
            - PYTHONDONTWRITEBYTECODE=1
            - "MONGO_URL=mongodb://root:root@mongo:27017/admin"
        depends_on:
            - mongo
            - mongo-express

    dyscord-tests:
        build:
            context: .
            dockerfile: Dockerfiles/test.Dockerfile
        restart: "no"
        container_name: "TESTSimpleDiscord"
        volumes:
            - ./:/usr/src/app/
        user: "${UID}:${GID}"
        environment:
            - PYTHONDONTWRITEBYTECODE=1

    documentation:
        build:
            context: .
            dockerfile: Dockerfiles/docs.Dockerfile
        restart: "no"
        volumes:
            - ./:/usr/src/app/
        user: "${UID}:${GID}"
        ports:
        - "8000:8000"
        command: "mkdocs serve -a 0.0.0.0:8000"

    releaser:
        build:
            context: .
            dockerfile: Dockerfiles/release.Dockerfile
        restart: "no"
        volumes:
            - ./:/usr/src/app/
        environment:
            - TWINE_USERNAME=${TWINE_USERNAME}
            - TWINE_PASSWORD=${TWINE_PASSWORD}
        user: "${UID}:${GID}"

    # For local development.
    mongo:
        image: mongo:5.0.3
        restart: always
        command: --wiredTigerCacheSizeGB 0.25
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root

    # For local development.
    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - 8100:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: root

    jupyter:
        build:
            context: .
            dockerfile: Dockerfiles/jupyter.Dockerfile
            network: host
        ports:
            - 8888:8888
            - 8000:8000
        user: "${UID}:${GID}"
        volumes:
            - ./src/dyscord:/opt/conda/lib/python3.9/site-packages/dyscord:ro
        command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password='' --ip=0.0.0.0 --ServerApp.root_dir='/home/jovyan/examples/'"
        network_mode: host
        environment:
            - JUPYTER_ENABLE_LAB=yes

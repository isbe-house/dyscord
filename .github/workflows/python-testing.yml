name: Python Testing
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - dev
jobs:
  Test-Python:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          # - 'pypy-3.6'
          # - 'pypy-3.7'
    name: Python ${{ matrix.python-version }} sample
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          # python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - run: python3 -m pip install --upgrade  pip
      - run: python3 -m pip install -r tests/requirements_test.txt
      - run: python3 -m pip install -r requirements.txt
      - name: "Code Version"
        id: "version"
        run: python -c "import src.dyscord.version; print(f'::set-output name=version::{src.dyscord.version.__version__}')"
      - name: "Get Version"
        run: echo "The selected version is ${{ steps.version.outputs.version }}"
      - name: "Test: pytest"
        run: python3 -m pytest --cov=src --durations=5 -vv --color=yes tests
      - name: "Test: mypy"
        run: mypy src/dyscord
      - name: "Test: flake8"
        run: flake8
      - name: Pydocsstyle
        run: pydocstyle --add-ignore=D407,D300,D203,D100,D104 --convention=google src

  Build-Docs:
    runs-on: self-hosted
    name: "Documentation"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python3 -m pip install --upgrade pip
      - run: python3 -m pip install -r docs/requirements_docs.txt
      - run: python3 -m pip install -r requirements.txt
      - run: mkdocs build

  Coverage:
    runs-on: self-hosted
    name: "Code Coverage"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python3 -m pip install --upgrade  pip
      - run: python3 -m pip install -r tests/requirements_test.txt
      - run: python3 -m pip install -r requirements.txt
      - name: "Test: pytest"
        run: python3 -m pytest --cov=src --durations=5 -vv --color=yes tests
      - name: "Produce coverage XML"
        run: coverage xml
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

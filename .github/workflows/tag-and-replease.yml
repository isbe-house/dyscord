name: Tagging
on:
  workflow_run:
    workflows: ["Python Testing"]
    branches: [main]
    push:
    types:
      - completed
jobs:
  Tag Release:
    runs-on: [self-hosted, docker]
    if: github.ref == 'refs/heads/main'
    steps:
      - run: echo "Lets tag!"
      - uses: actions/checkout@v2
      - name: Tag On Main
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          strategy: regex # Optional since regex_pattern is defined
          root: "src/dyscord/version.py"
          regex_pattern: "__version__ = '((\\d+)(\\.\\d+(\\.\\d+)?)?((a|b|rc)\\d+)?(.post\\d+)?(.dev\\d+)?)'"
          tag_prefix: "v"
          tag_message: "Autogenerated tag."
  Release Test:
    runs-on: self-hosted
    needs: "Tag Release"
    name: Test Release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - run: python3 -m pip install --upgrade pip twine build
      - name: "Build release"
        run: python3 -m build
      - name: "Release to PyPi"
        run: python3 -m twine upload --repository testpypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_RELEASE_TOKEN }}
  Release:
    runs-on: self-hosted
    needs: "Release Test"
    name: Release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - run: python3 -m pip install --upgrade pip twine build
      - name: "Build release"
        run: python3 -m build
      - name: "Release to PyPi"
        run: python3 -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_RELEASE_TOKEN }}
